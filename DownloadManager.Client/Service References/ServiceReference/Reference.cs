//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DownloadManager.Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/DownloadManager.Library")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestResultOfArrayOfAppInfowtz7jBEH", Namespace="http://schemas.datacontract.org/2004/07/DownloadManager.Library.Models")]
    [System.SerializableAttribute()]
    public partial class RequestResultOfArrayOfAppInfowtz7jBEH : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<DownloadManager.Client.ServiceReference.AppInfo> DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<DownloadManager.Client.ServiceReference.AppInfo> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppInfo", Namespace="http://schemas.datacontract.org/2004/07/DownloadManager.Library.Models")]
    [System.SerializableAttribute()]
    public partial class AppInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WikiLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WikiVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LinkValid {
            get {
                return this.LinkValidField;
            }
            set {
                if ((this.LinkValidField.Equals(value) != true)) {
                    this.LinkValidField = value;
                    this.RaisePropertyChanged("LinkValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WikiLink {
            get {
                return this.WikiLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.WikiLinkField, value) != true)) {
                    this.WikiLinkField = value;
                    this.RaisePropertyChanged("WikiLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WikiVersion {
            get {
                return this.WikiVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.WikiVersionField, value) != true)) {
                    this.WikiVersionField = value;
                    this.RaisePropertyChanged("WikiVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestResult", Namespace="http://schemas.datacontract.org/2004/07/DownloadManager.Library.Models")]
    [System.SerializableAttribute()]
    public partial class RequestResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestResultOfbase64Binary", Namespace="http://schemas.datacontract.org/2004/07/DownloadManager.Library.Models")]
    [System.SerializableAttribute()]
    public partial class RequestResultOfbase64Binary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDownloadManagerService")]
    public interface IDownloadManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetData", ReplyAction="http://tempuri.org/IDownloadManagerService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetData", ReplyAction="http://tempuri.org/IDownloadManagerService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IDownloadManagerService/GetDataUsingDataContractResponse")]
        DownloadManager.Client.ServiceReference.CompositeType GetDataUsingDataContract(DownloadManager.Client.ServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IDownloadManagerService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.CompositeType> GetDataUsingDataContractAsync(DownloadManager.Client.ServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetApps", ReplyAction="http://tempuri.org/IDownloadManagerService/GetAppsResponse")]
        DownloadManager.Client.ServiceReference.RequestResultOfArrayOfAppInfowtz7jBEH GetApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetApps", ReplyAction="http://tempuri.org/IDownloadManagerService/GetAppsResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResultOfArrayOfAppInfowtz7jBEH> GetAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Update", ReplyAction="http://tempuri.org/IDownloadManagerService/UpdateResponse")]
        DownloadManager.Client.ServiceReference.RequestResult Update(DownloadManager.Client.ServiceReference.AppInfo app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Update", ReplyAction="http://tempuri.org/IDownloadManagerService/UpdateResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> UpdateAsync(DownloadManager.Client.ServiceReference.AppInfo app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Add", ReplyAction="http://tempuri.org/IDownloadManagerService/AddResponse")]
        DownloadManager.Client.ServiceReference.RequestResult Add(DownloadManager.Client.ServiceReference.AppInfo app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Add", ReplyAction="http://tempuri.org/IDownloadManagerService/AddResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> AddAsync(DownloadManager.Client.ServiceReference.AppInfo app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Remove", ReplyAction="http://tempuri.org/IDownloadManagerService/RemoveResponse")]
        DownloadManager.Client.ServiceReference.RequestResult Remove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/Remove", ReplyAction="http://tempuri.org/IDownloadManagerService/RemoveResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> RemoveAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetBinaries", ReplyAction="http://tempuri.org/IDownloadManagerService/GetBinariesResponse")]
        DownloadManager.Client.ServiceReference.RequestResultOfbase64Binary GetBinaries(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/GetBinaries", ReplyAction="http://tempuri.org/IDownloadManagerService/GetBinariesResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResultOfbase64Binary> GetBinariesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/RemoveCachedFile", ReplyAction="http://tempuri.org/IDownloadManagerService/RemoveCachedFileResponse")]
        DownloadManager.Client.ServiceReference.RequestResult RemoveCachedFile(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/RemoveCachedFile", ReplyAction="http://tempuri.org/IDownloadManagerService/RemoveCachedFileResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> RemoveCachedFileAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/ClearAllCachedFiles", ReplyAction="http://tempuri.org/IDownloadManagerService/ClearAllCachedFilesResponse")]
        DownloadManager.Client.ServiceReference.RequestResult ClearAllCachedFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/ClearAllCachedFiles", ReplyAction="http://tempuri.org/IDownloadManagerService/ClearAllCachedFilesResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> ClearAllCachedFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/CreateCachedFile", ReplyAction="http://tempuri.org/IDownloadManagerService/CreateCachedFileResponse")]
        DownloadManager.Client.ServiceReference.RequestResult CreateCachedFile(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/CreateCachedFile", ReplyAction="http://tempuri.org/IDownloadManagerService/CreateCachedFileResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> CreateCachedFileAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/CreateCachedFiles", ReplyAction="http://tempuri.org/IDownloadManagerService/CreateCachedFilesResponse")]
        DownloadManager.Client.ServiceReference.RequestResult CreateCachedFiles(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDownloadManagerService/CreateCachedFiles", ReplyAction="http://tempuri.org/IDownloadManagerService/CreateCachedFilesResponse")]
        System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> CreateCachedFilesAsync(System.Collections.Generic.List<int> ids);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDownloadManagerServiceChannel : DownloadManager.Client.ServiceReference.IDownloadManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadManagerServiceClient : System.ServiceModel.ClientBase<DownloadManager.Client.ServiceReference.IDownloadManagerService>, DownloadManager.Client.ServiceReference.IDownloadManagerService {
        
        public DownloadManagerServiceClient() {
        }
        
        public DownloadManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DownloadManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DownloadManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public DownloadManager.Client.ServiceReference.CompositeType GetDataUsingDataContract(DownloadManager.Client.ServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.CompositeType> GetDataUsingDataContractAsync(DownloadManager.Client.ServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResultOfArrayOfAppInfowtz7jBEH GetApps() {
            return base.Channel.GetApps();
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResultOfArrayOfAppInfowtz7jBEH> GetAppsAsync() {
            return base.Channel.GetAppsAsync();
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult Update(DownloadManager.Client.ServiceReference.AppInfo app) {
            return base.Channel.Update(app);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> UpdateAsync(DownloadManager.Client.ServiceReference.AppInfo app) {
            return base.Channel.UpdateAsync(app);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult Add(DownloadManager.Client.ServiceReference.AppInfo app) {
            return base.Channel.Add(app);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> AddAsync(DownloadManager.Client.ServiceReference.AppInfo app) {
            return base.Channel.AddAsync(app);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult Remove(int id) {
            return base.Channel.Remove(id);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> RemoveAsync(int id) {
            return base.Channel.RemoveAsync(id);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResultOfbase64Binary GetBinaries(int id) {
            return base.Channel.GetBinaries(id);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResultOfbase64Binary> GetBinariesAsync(int id) {
            return base.Channel.GetBinariesAsync(id);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult RemoveCachedFile(int id) {
            return base.Channel.RemoveCachedFile(id);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> RemoveCachedFileAsync(int id) {
            return base.Channel.RemoveCachedFileAsync(id);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult ClearAllCachedFiles() {
            return base.Channel.ClearAllCachedFiles();
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> ClearAllCachedFilesAsync() {
            return base.Channel.ClearAllCachedFilesAsync();
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult CreateCachedFile(int id) {
            return base.Channel.CreateCachedFile(id);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> CreateCachedFileAsync(int id) {
            return base.Channel.CreateCachedFileAsync(id);
        }
        
        public DownloadManager.Client.ServiceReference.RequestResult CreateCachedFiles(System.Collections.Generic.List<int> ids) {
            return base.Channel.CreateCachedFiles(ids);
        }
        
        public System.Threading.Tasks.Task<DownloadManager.Client.ServiceReference.RequestResult> CreateCachedFilesAsync(System.Collections.Generic.List<int> ids) {
            return base.Channel.CreateCachedFilesAsync(ids);
        }
    }
}
